name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    name: Format + lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage manual --all-files

  checks:
    name: Run tests for Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']  # test oldest and latest supported versions
        runs-on: [ubuntu-latest]  # can be extended to other OSes, e.g. [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3.0.4
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          channel-priority: strict
          auto-activate-base: false
          miniforge-version: latest
          use-mamba: true

      # https://pypi.org/project/osmium/
      - name: Install osmium deps
        shell: bash -el {0}
        run: |
          sudo apt-get update
          sudo apt-get install build-essential cmake libboost-dev \
                   libexpat1-dev zlib1g-dev libbz2-dev

      - name: Create conda environment
        shell: bash -el {0}
        run: |
          conda create --name gdal_env python=${{ matrix.python-version }} -y

      - name: Install GDAL
        shell: bash -el {0}
        run: |
          conda activate gdal_env
          mamba install conda-forge::gdal

      - name: Install package
        shell: bash -el {0}
        run: |
          conda activate gdal_env
          python -m pip install .[test]

      - name: Test package
        shell: bash -el {0}
        run: |
          conda activate gdal_env
          python -m pytest -ra --cov --cov-report=xml --cov-report=term --durations=20

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.0.1
